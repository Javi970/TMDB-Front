{"ast":null,"code":"var _jsxFileName = \"/home/augusto/Projects/TMDB/TMDB-Front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const API_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'c470ed460ab8e34d41a15eb2c5e77dfa';\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/original';\n  const URL_IMAGE = 'https://image.tmdb.org/t/p/original';\n\n  //variables de estado\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: 'Loading Movies'\n  });\n  const [playing, setPlaying] = useState(false);\n\n  //funcion para realizar la peticion por get a la api\n  const fetchMovies = async searchKey => {\n    const type = searchKey ? 'search' : 'discover';\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey\n      }\n    });\n    setMovies(results);\n    setMovie(results[0]);\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n  //funcion para la peticion de un solo objeto y mostrar en reproductor de video\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'videos'\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === 'Official Trailer');\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n  };\n  const selectMovie = async movie => {\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n\n  //funcion para buscar peliculas\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey);\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mt-5 mb-5\",\n      children: \"Trailer Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container mb-4\",\n      onSubmit: searchMovies,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search...\",\n        onChange: e => setSearchKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewtrailer\",\n          style: {\n            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`\n          },\n          children: playing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(YouTube, {\n              videoId: trailer.key,\n              className: \"reproductor container\",\n              containerClassName: 'youtube-container amru',\n              opts: {\n                width: '100%',\n                height: '100%',\n                playerVars: {\n                  autoplay: 1,\n                  controls: 0,\n                  cc_load_policy: 0,\n                  fs: 0,\n                  iv_load_policy: 0,\n                  modestbranding: 0,\n                  rel: 0,\n                  showinfo: 0,\n                  showinfo: 0,\n                  showinfo: 0\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPlaying(false),\n              className: \"boton\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [trailer ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"boton\",\n                onClick: () => setPlaying(true),\n                type: \"button\",\n                children: \"Play Trailer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 23\n              }, this) : 'Sorry, no trailer available', /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white\",\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-3\",\n          onClick: () => selectMovie(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${URL_IMAGE + movie.poster_path}`,\n            alt: \"\",\n            heigth: 600,\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l5APD8K0qucky2NhJg4YdrWyEhw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","YouTube","NavBar","App","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","fetchMovies","type","data","results","get","params","api_key","query","length","fetchMovie","id","append_to_response","videos","find","vid","name","selectMovie","window","scrollTo","searchMovies","e","preventDefault","target","value","backgroundImage","backdrop_path","key","width","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","overview","map","poster_path"],"sources":["/home/augusto/Projects/TMDB/TMDB-Front/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport YouTube from 'react-youtube'\nimport './App.css'\nimport NavBar from './components/NavBar/NavBar'\n\nfunction App() {\n  const API_URL = 'https://api.themoviedb.org/3'\n  const API_KEY = 'c470ed460ab8e34d41a15eb2c5e77dfa'\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/original'\n  const URL_IMAGE = 'https://image.tmdb.org/t/p/original'\n\n  //variables de estado\n  const [movies, setMovies] = useState([])\n  const [searchKey, setSearchKey] = useState('')\n  const [trailer, setTrailer] = useState(null)\n  const [movie, setMovie] = useState({ title: 'Loading Movies' })\n  const [playing, setPlaying] = useState(false)\n\n  //funcion para realizar la peticion por get a la api\n  const fetchMovies = async (searchKey) => {\n    const type = searchKey ? 'search' : 'discover'\n    const {\n      data: { results },\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey,\n      },\n    })\n    setMovies(results)\n    setMovie(results[0])\n\n    if (results.length) {\n      await fetchMovie(results[0].id)\n    }\n  }\n  //funcion para la peticion de un solo objeto y mostrar en reproductor de video\n  const fetchMovie = async (id) => {\n    const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'videos',\n      },\n    })\n\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(\n        (vid) => vid.name === 'Official Trailer',\n      )\n      setTrailer(trailer ? trailer : data.videos.results[0])\n    }\n    setMovie(data)\n  }\n\n  const selectMovie = async (movie) => {\n    fetchMovie(movie.id)\n    setMovie(movie)\n    window.scrollTo(0, 0)\n  }\n\n  //funcion para buscar peliculas\n  const searchMovies = (e) => {\n    e.preventDefault()\n    fetchMovies(searchKey)\n  }\n\n  useEffect(() => {\n    fetchMovies()\n  }, [])\n\n  return (\n    <div>\n      <h2 className=\"text-center mt-5 mb-5\">Trailer Movies</h2>\n      {/* buscador */}\n      <form className=\"container mb-4\" onSubmit={searchMovies}>\n        <input\n          type=\"text\"\n          placeholder=\"search...\"\n          onChange={(e) => setSearchKey(e.target.value)}\n        />\n        <button className=\"btn btn-primary\">Search</button>\n      </form>\n\n      {/* aca va todo el contenedor del banner y del reproductor del video */}\n      <div>\n        <main>\n          {movie ? (\n            <div\n              className=\"viewtrailer\"\n              style={{\n                backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n              }}\n            >\n              {playing ? (\n                <>\n                  <YouTube\n                    videoId={trailer.key}\n                    className=\"reproductor container\"\n                    containerClassName={'youtube-container amru'}\n                    opts={{\n                      width: '100%',\n                      height: '100%',\n                      playerVars: {\n                        autoplay: 1,\n                        controls: 0,\n                        cc_load_policy: 0,\n                        fs: 0,\n                        iv_load_policy: 0,\n                        modestbranding: 0,\n                        rel: 0,\n                        showinfo: 0,\n                        showinfo: 0,\n                        showinfo: 0,\n                      },\n                    }}\n                  />\n                  <button onClick={() => setPlaying(false)} className=\"boton\">\n                    Close\n                  </button>\n                </>\n              ) : (\n                <div className=\"container\">\n                  <div className=\"\">\n                    {trailer ? (\n                      <button\n                        className=\"boton\"\n                        onClick={() => setPlaying(true)}\n                        type=\"button\"\n                      >\n                        Play Trailer\n                      </button>\n                    ) : (\n                      'Sorry, no trailer available'\n                    )}\n                    <h1 className=\"text-white\">{movie.title}</h1>\n                    <p className=\"text-white\">{movie.overview}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </main>\n      </div>\n\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n          {movies.map((movie) => (\n            <div key={movie.id} className=\"col-md-4 mb-3\" onClick={()=>selectMovie(movie)}>\n              <img\n                src={`${URL_IMAGE + movie.poster_path}`}\n                alt=\"\"\n                heigth={600}\n                width=\"100%\"\n              />\n              <h4 className=\"text-center\">{movie.title}</h4>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}