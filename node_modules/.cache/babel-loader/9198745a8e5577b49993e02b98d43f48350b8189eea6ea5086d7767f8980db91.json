{"ast":null,"code":"var _jsxFileName = \"/home/augusto/Projects/TMDB/TMDB-Front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const API_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'c470ed460ab8e34d41a15eb2c5e77dfa';\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/original';\n  const URL_IMAGE = 'https://image.tmdb.org/t/p/original';\n\n  //variables de estado\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: 'Loading Movies'\n  });\n  const [playing, setPlaying] = useState(false);\n\n  //funcion para realizar la peticion por get a la api\n  const fetchMovies = async searchKey => {\n    const type = searchKey ? 'search' : 'discover';\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey\n      }\n    });\n    setMovies(results);\n    setMovie(results[0]);\n  };\n  //funcion para la peticion de un solo objeto y mostrar en reproductor de video\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos\"\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos;\n    }\n  };\n\n  //funcion para buscar peliculas\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey);\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mt-5 mb-5\",\n      children: \"Trailer Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container mb-4\",\n      onSubmit: searchMovies,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search...\",\n        onChange: e => setSearchKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${URL_IMAGE + movie.poster_path}`,\n            alt: \"\",\n            heigth: 600,\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l5APD8K0qucky2NhJg4YdrWyEhw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","YouTube","App","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","fetchMovies","type","data","results","get","params","api_key","query","fetchMovie","id","append_to_response","videos","searchMovies","e","preventDefault","target","value","map","poster_path"],"sources":["/home/augusto/Projects/TMDB/TMDB-Front/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport YouTube from 'react-youtube'\nimport './App.css'\n\nfunction App() {\n  const API_URL = 'https://api.themoviedb.org/3'\n  const API_KEY = 'c470ed460ab8e34d41a15eb2c5e77dfa'\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/original'\n  const URL_IMAGE = 'https://image.tmdb.org/t/p/original'\n\n  //variables de estado\n  const [movies, setMovies] = useState([])\n  const [searchKey, setSearchKey] = useState('')\n  const [trailer, setTrailer] = useState(null)\n  const [movie, setMovie] = useState({ title: 'Loading Movies' })\n  const [playing, setPlaying] = useState(false)\n\n  //funcion para realizar la peticion por get a la api\n  const fetchMovies = async (searchKey) => {\n    const type = searchKey ? 'search' : 'discover'\n    const {\n      data: { results },\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey,\n      },\n    })\n    setMovies(results)\n    setMovie(results[0])\n  }\n  //funcion para la peticion de un solo objeto y mostrar en reproductor de video\n  const fetchMovie = async (id) => {\n    const {data}= await axios.get(`${API_URL}/movie/${id}`,{\n      params:{\n        api_key:API_KEY,\n        append_to_response:\"videos\"\n      }\n    })\n\n    if(data.videos && data.videos.results){\n      const trailer = data.videos\n    }\n  }\n\n  //funcion para buscar peliculas\n  const searchMovies = (e) => {\n    e.preventDefault()\n    fetchMovies(searchKey)\n  }\n\n  useEffect(() => {\n    fetchMovies()\n  }, [])\n\n  return (\n    <div>\n      <h2 className=\"text-center mt-5 mb-5\">Trailer Movies</h2>\n      {/* buscador */}\n      <form className=\"container mb-4\" onSubmit={searchMovies}>\n        <input\n          type=\"text\"\n          placeholder=\"search...\"\n          onChange={(e) => setSearchKey(e.target.value)}\n        />\n        <button className=\"btn btn-primary\">Search</button>\n      </form>\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n          {movies.map((movie) => (\n            <div key={movie.id} className=\"col-md-4 mb-3\">\n              <img\n                src={`${URL_IMAGE + movie.poster_path}`}\n                alt=\"\"\n                heigth={600}\n                width=\"100%\"\n              />\n              <h4 className=\"text-center\">{movie.title}</h4>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}