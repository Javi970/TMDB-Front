{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { message } from 'antd';\nexport const userLogin = createAction(\"USER_LOGIN\");\nexport const userLogOut = createAction('USER_LOGOUT');\nexport const addToFavorites = createAction('ADD_TO_FAVORITES');\nexport const removeFromFavorites = createAction('REMOVE_FROM_FAVORITES');\nconst initialState = {\n  id: null,\n  email: null,\n  name: null,\n  moviesFav: []\n};\nconst userReducer = createReducer(initialState, {\n  [userLogin]: (state, action) => action.payload,\n  [userLogOut]: (state, action) => state = {},\n  [addToFavorites]: (state, action) => {\n    if (state.moviesFav.find(fav => fav.id === action.payload.id)) {\n      message.error('error:this movie was already added to favorites');\n      return state;\n    }\n    message.success('Movie added to favorites');\n    return state.moviesFav.push(action.payload);\n  },\n  [removeFromFavorites]: (state, action) => {\n    message.success(`Movie removed from favorites`);\n    return {\n      ...state,\n      moviesFav: state.moviesFav.filter(fav => fav.id !== action.payload.id)\n    };\n  }\n});\nexport default userReducer;","map":{"version":3,"names":["createAction","createReducer","message","userLogin","userLogOut","addToFavorites","removeFromFavorites","initialState","id","email","name","moviesFav","userReducer","state","action","payload","find","fav","error","success","push","filter"],"sources":["/home/augusto/Projects/TMDB/TMDB-Front/src/store/user.js"],"sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { message } from 'antd'\n\nexport const userLogin = createAction(\"USER_LOGIN\");\nexport const userLogOut = createAction('USER_LOGOUT')\nexport const addToFavorites = createAction('ADD_TO_FAVORITES')\nexport const removeFromFavorites = createAction('REMOVE_FROM_FAVORITES')\n\nconst initialState = {\n  id: null,\n  email: null,\n  name: null,\n  moviesFav:[]\n};\n\nconst userReducer = createReducer(initialState, {\n  [userLogin]: (state, action) => action.payload,\n  [userLogOut]: (state, action) => (state = {}),\n  [addToFavorites]: (state, action) => {\n    if (state.moviesFav.find((fav) => fav.id === action.payload.id)) {\n      message.error('error:this movie was already added to favorites')\n      return state\n    }\n\n    message.success('Movie added to favorites')\n    return state.moviesFav.push(action.payload)\n  },\n  [removeFromFavorites]: (state, action) => {\n    message.success(`Movie removed from favorites`)\n    return {\n      ...state,\n      moviesFav: state.moviesFav.filter(\n        (fav) => fav.id !== action.payload.id,\n      ),\n    }\n  },\n})\n\n\nexport default userReducer;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,SAASC,OAAO,QAAQ,MAAM;AAE9B,OAAO,MAAMC,SAAS,GAAGH,YAAY,CAAC,YAAY,CAAC;AACnD,OAAO,MAAMI,UAAU,GAAGJ,YAAY,CAAC,aAAa,CAAC;AACrD,OAAO,MAAMK,cAAc,GAAGL,YAAY,CAAC,kBAAkB,CAAC;AAC9D,OAAO,MAAMM,mBAAmB,GAAGN,YAAY,CAAC,uBAAuB,CAAC;AAExE,MAAMO,YAAY,GAAG;EACnBC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVC,SAAS,EAAC;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGX,aAAa,CAACM,YAAY,EAAE;EAC9C,CAACJ,SAAS,GAAG,CAACU,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACC,OAAO;EAC9C,CAACX,UAAU,GAAG,CAACS,KAAK,EAAEC,MAAM,KAAMD,KAAK,GAAG,CAAC,CAAE;EAC7C,CAACR,cAAc,GAAG,CAACQ,KAAK,EAAEC,MAAM,KAAK;IACnC,IAAID,KAAK,CAACF,SAAS,CAACK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACT,EAAE,KAAKM,MAAM,CAACC,OAAO,CAACP,EAAE,CAAC,EAAE;MAC/DN,OAAO,CAACgB,KAAK,CAAC,iDAAiD,CAAC;MAChE,OAAOL,KAAK;IACd;IAEAX,OAAO,CAACiB,OAAO,CAAC,0BAA0B,CAAC;IAC3C,OAAON,KAAK,CAACF,SAAS,CAACS,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;EAC7C,CAAC;EACD,CAACT,mBAAmB,GAAG,CAACO,KAAK,EAAEC,MAAM,KAAK;IACxCZ,OAAO,CAACiB,OAAO,CAAE,8BAA6B,CAAC;IAC/C,OAAO;MACL,GAAGN,KAAK;MACRF,SAAS,EAAEE,KAAK,CAACF,SAAS,CAACU,MAAM,CAC9BJ,GAAG,IAAKA,GAAG,CAACT,EAAE,KAAKM,MAAM,CAACC,OAAO,CAACP,EAAE;IAEzC,CAAC;EACH;AACF,CAAC,CAAC;AAGF,eAAeI,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}